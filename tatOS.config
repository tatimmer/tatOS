;tatOS.config
;April 2016

;this file sets hardware & software dependent options for tatOS
;set these values and re-assemble 
;see "makefile" for how to build tatos


;note: if you introduce a new USBCONTROLLERTYPE then you must edit a great
;many files in /usb including initdevices, initflash, initmouse, initkeyboard
;devicedesc, configdesc, read10, write10 etc etc etc


;define the usb controller type
;**********************************
;this controls what usb controller you will use
;and controls what options are presented to you in usbcentral
;all the driver code in /usb depends on the value of USBCONTROLLERTYPE
;on linux run lspci -v
;on windows see the device manager
;on tatOS from usbcentral run the usb controller pci bus scan to get 
;your vendorID, deviceID, bus:dev:fun 
;pcidatabase.com will translate the vendorID & deviceID for you
;download and study your chipset & usb controller data sheets

;UHCI with 2-ports on back ...............USBCONTROLLERTYPE == 0
;EHCI with UHCI companion controllers ....USBCONTROLLERTYPE == 1
;EHCI with integrated root hub ...........USBCONTROLLERTYPE == 2
;EHCI only no usb 1.0 support ............USBCONTROLLERTYPE == 3
%define USBCONTROLLERTYPE 2




;define the bus:dev:fun for controller type == 0   UHCI
;**********************************************************
;my old test machine was built with just UHCI and 2 root ports
;flash drive, keyboard and mouse work with UHCI directly
;VendorID=8086h   DeviceID=7112h
%define UHCI_BUS 0
%define UHCI_DEV 7
%define UHCI_FUN 2




;define the bus:dev:fun for controller type == 1   EHCI w/UHCI companions
;*************************************************************************
;VIA vt6212 pci addon card VendorID=1106h, DeviceID=3104h
;EHCI usb controller w/ (2) UHCI companion controllers
%define EHCI_WITH_COMPANION_BUS 0
%define EHCI_WITH_COMPANION_DEV 0x10
%define EHCI_WITH_COMPANION_FUN 2
%define EHCI_COMPANION_UHCI_BUS_1 0
%define EHCI_COMPANION_UHCI_DEV_1 0x10
%define EHCI_COMPANION_UHCI_FUN_1 0
%define EHCI_COMPANION_UHCI_BUS_2 0
%define EHCI_COMPANION_UHCI_DEV_2 0x10
%define EHCI_COMPANION_UHCI_FUN_2 1




;define the bus:dev:fun for controller type == 2  EHCI w/integrated root hub
;*****************************************************************************
;ACER laptop has 2 Intel (8086) EHCI controllers, each with integrated root hub
;root hub (rate matching hub)  acts as transaction translator for low speed devices
;deviceID=1e2d has bus:dev:fun  00:1a:00   webcam, no external ports
;deviceID=1e26 has bus:dev:fun  00:1d:00   3 external usb ports

;Lenovo desktop M81 with Intel 6/c200 series chipset
;this has 2 ehci controllers, each with integrated root hub
;deviceID=1c2d has bus:dev:fun  00:1a:00   6 ports on back
;deviceID=1c26 has bus:dev:fun  00:1d:00   2 ports on front

%define EHCI_WITH_ROOTHUB_BUS 0
%define EHCI_WITH_ROOTHUB_DEV 0x1a
%define EHCI_WITH_ROOTHUB_FUN 0




;define the bus:dev:fun for controller type == 3    EHCI only no usb 1.0 support
;********************************************************************************
;this is ehci only no usb 1.0 support
;developed for my sons mac with vmware which emulates ehci (& ohci)
%define EHCIONLY_BUS 0
%define EHCIONLY_DEV 0xb
%define EHCIONLY_FUN 0




;USB Mouse Report Button Index
;********************************
;for manhattan mouse with 6 byte report having leading 01 byte use 01
;for Logitech or Microsoft Mouse with the normal 4 byte report use 00
;run usb mouse report demo from usbcentral 
%define MOUSERPRTBTNINDX 1




;VERBOSEDUMP
;***************
;some driver code and tlib functions can provide extra output of whats going on
;ttasm symbol table lookup return values are available with this option
;ttasm dump messages on pass=1 are normally erased but can be shown with this option
;note: ttasm will fill up the dump during assembly of very large files 
;to the point that output to the dump will be truncated if you select this option
;usb driver bitfields are available
;all verbose output is written as ascii strings to the dump
;1=provide verbose dump 
;0=do not provide verbose dump
%define VERBOSEDUMP  0



;TEDIT Options
;*****************
;to show line numbers in the left hand column use 1 else use 0
%define TEDITSHOWLINENUMBERS 1


