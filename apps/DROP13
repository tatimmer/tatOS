

;drop13 Nov 02, 2015 

;dropdown list box demo
;shows the tatOS dropdown list box
;shows how to make a top level menu using 
;multiple instances of the dropdown
;shows how to respond to mouse clicks
;make sure you have the usb mouse ready to go

;assembles with ttasm for tatOS 


org STARTOFEXE


;*************
;   DATA
;*************


LclickSaturday:
dd 0
LclickColor:
dd 0
LclickLanguages:
dd 0xffffffff




;****************
;DROPDOWNSTRUC #1
;****************

ddtitle:
db 'Things to do on the weekend',0

ddstr0:
db '00 go shopping',0
ddstr1:
db '01 take a nap',0
ddstr2:
db '02 eat a snack',0
ddstr3:
db '03 take a drive in the country',0
ddstr4:
db '04 work on tatOS',0
ddstr5:
db '05 read a book',0
ddstr6:
db '06 go to church',0
ddstr7:
db '07 talk to your parents',0
ddstr8:
db '08 do some mudding',0
ddstr9:
db '09 quit',0


dropdown_Saturday:
dd 0       ;ID selected string (by kernel)
dd ddtitle ;address of title string
dd 0       ;x
dd 0       ;y
dd 250     ;width of dialog
dd 0       ;height (by kernel)
dd 0       ;expose
dd 10      ;qty option strings
dd ddstr0, ddstr1, ddstr2, ddstr3, ddstr4
dd ddstr5, ddstr6, ddstr7, ddstr8, ddstr9



;****************
;DROPDOWNSTRUC #2
;****************

colorTitle:
db 'My Favorite Colors',0

color1:
db '00 red',0
color2:
db '01 green',0
color3:
db '02 blue',0
color4:
db '03 purple',0
color5:
db '04 black',0
color6:
db '05 orange',0


dropdown_Color:
dd 0           ;ID selected string (by kernel)
dd colorTitle  ;address title string
dd 250         ;x
dd 0           ;y
dd 250         ;width of dialog
dd 0           ;height (by kernel)
dd 0           ;expose
dd 6           ;qty option strings
dd color1, color2, color3, color4, color5, color6


ColorTable:
;red, green, blue, purple, black, orange
dd 0xf5, 0xf1, 0xf0, 0xf3, 0xee, 0x11


;****************
;DROPDOWNSTRUC #3
;****************

langTitle:
db 'Great Programming Languages',0

lang0:
db '00 x86 Assembly',0
lang1:
db '01 C or C++',0
lang2:
db '02 Fortran',0
lang3:
db '03 Visual basic',0
lang4:
db '04 PHP',0
lang5:
db '05 Ruby on Rails',0
lang6:
db '06 Java',0
lang7:
db '07 Cobol',0


dropdown_Languages:
dd 0           ;ID selected string (by kernel)
dd langTitle   ;address title string
dd 500         ;x
dd 0           ;y
dd 250         ;width of dialog
dd 0           ;height (by kernel)
dd 0           ;expose
dd 8           ;qty option strings
dd lang0,lang1,lang2,lang3,lang4,lang5,lang6,lang7

str0:
db 'x86 asm is the best !',0
str1:
db 'The language of Linux and I like it too',0
str2:
db 'A great language for engineers',0
str3:
db 'Cant say I use this much',0
str4:
db 'Outragous',0
str5:
db 'Rediculous',0
str6:
db 'Are you crazy ?',0
str7:
db 'Never touch it',0

FeedbackTable:
dd str0, str1, str2, str3, str4, str5, str6, str7


;*************
;   CODE
;*************


..start

	
	mov eax,105  ;dropdowncreate
	mov ebx,dropdown_Saturday
	sysenter

	mov eax,105  ;dropdowncreate
	mov ebx,dropdown_Color
	sysenter

	mov eax,105  ;dropdowncreate
	mov ebx,dropdown_Languages
	sysenter

	mov dword [LclickSaturday],0
	mov dword [LclickColor],0


.appmainloop:

	backbufclear

	mov eax,106  ;dropdownpaint
	mov ebx,dropdown_Saturday
	sysenter

	mov eax,106  ;dropdownpaint
	mov ebx,dropdown_Color
	sysenter

	mov eax,106  ;dropdownpaint
	mov ebx,dropdown_Languages
	sysenter
	

	;do other painting ...


	;display the value of the selected list items
	mov ebx,[LclickSaturday]
	putebx ebx,0,200,0xf5ff,0


	;display a color selection with an appropriate font color of course

	cmp dword [LclickColor],0xffffffff
	jz .color1

	;the user picked from the color dropdown
	mov eax,[LclickColor]   ;eax=0->5
	mov esi,ColorTable[eax]
	shl esi,8
	or esi,0xff
	jmp .color2



	;the user did not pick from the color dropdown
.color1:
	mov esi,0xefff  ;black on transparent background
	;fall thru


.color2:
	;display the number of the color selected in the appropriate color
	mov eax,14  ;putebx
	mov ebx,[LclickColor]
	mov ecx,250 ;x
	mov edx,200 ;y
	;esi=black or color selected per above
	mov edi,0   ;size 0=ebx
	sysenter





	mov ebx,[LclickLanguages]
	putebx ebx,500,200,0xf5ff,0


	;display a message appropriate for the programming language selected
	cmp dword [LclickLanguages],0xffffffff
	jz .doneFeedbackMessage

	mov ebx,FONT01             ;font
	mov ecx,50                 ;x
	mov edx,300                ;y
	mov eax,[LclickLanguages]  ;0->7
	mov esi,FeedbackTable[eax] ;address of string
	mov edi,0x30ff             ;color
	mov eax,13                 ;puts
	sysenter

.doneFeedbackMessage:



	mov eax,62  ;arrow pointer
	sysenter

	swapbuf  
	;endpaint


	checkc
	cmp al,ESCAPE
	jz .quit


	;queue up a new usb mouse request
	mov eax,63  ;usbcheckmouse
	sysenter    ;return value in al

	cmp al,1    ;Lclick
	jz .leftmousehandler
	jmp .appmainloop



.leftmousehandler:

	;instead of just saving the selected list item ID
	;you could use a jmp table to execute some action
	;in response to the menu selection

	;save the ID of the selected list item
	;if the ID=0xffffffff this means no item selected
	;i.e. the user Lclick was outside the dropdown list 
	;or on the dropdown title
	mov eax,[dropdown_Saturday]
	mov [LclickSaturday],eax
	cmp eax,9  ;check if user wants to quit
	jz .quit


	;get color selection or 0xffffffff if something else selected
	mov eax,[dropdown_Color]
	mov [LclickColor],eax


	;get programming language selection
	mov eax,[dropdown_Languages]
	mov [LclickLanguages],eax
	jmp .appmainloop



	;if you insert code here dont forget to jmp
	;back to .appmainloop otherwise you will fall thru
	;and quit !

.quit:
	exit





;*************************** THE END *********************************

                    