;tatOS/tlib/pickoption.s



push str3
push str1
push 200
push 100
call pickoption
	ret





jmp pickoption


str1:
db '1=option1',NL
db '2=option2',NL
db '3=option3',NL
db '4=option4',NL
db '5=option5',0


str3:
db 'TITLE STRING',0

;*********************************************************
;pickoption
;this routine puts up a dialog box with a list of options
;a "gets" edit control is provided to collect user input
;this option box is drawn over top of calling app 
;upper left corner of the screen. 
;program execution is blocked until user hits ENTER or ESCAPE 

;input
;push address of Title string       [ebp+20]
;push address of Options string     [ebp+16]
;push Width of dialog box           [ebp+12]
;push Height of dialog box          [ebp+8]

;return:
;on ENTER  eax=numerical value user entered 
;on ESCAPE eax=0

;the Options string must be a 0 terminated multi-line string
;each line ends with NL except the last ends with 0
;the option numbers should begin with 1 (since eax=0 is ESCAPE)
;suggested format for multiline string:
;db '1=option1 text',NL
;db '2=option2 text',NL
;db '3=option3 text',NL
;db '4=option4 text',0

;the gets edit control is drawn 15 pixels from the bottom
;the multiline string is drawn starting after the title string
;calling program should pick a "height" value such that gets
;edit control does not over write last line of multiline string

;the colors used for this control are
;background = light gray 0xf6
;text = black 0xef
;these are the same colors as menu.s

;locals
;pickoptionstor times 50 db 0
pickoptionstor:
db0 50
pickstr1:
db 'pickoption return value',0
;**********************************************************


pickoption:

	push ebp
	mov ebp,esp


	;zero out the buffer to store option string
	mov edi,pickoptionstor
	mov ecx,10
	mov al,0
	call [MEMSET]

		
	;background rectangle (white with black text)
	push 0
	push 0
	push [ebp+12] d
	push [ebp+8] d
	push 0xf6  ;gray background same as menu.s
	call [FILLRECT]


	;display the title string
	push FONT02
	push 0
	push 2
	push [ebp+20] d
	push 0xefff
	call [PUTS]


	;draw a line under the title string
	mov ebx,0
	mov eax,17
	mov ecx,[ebp+12]
	mov esi,BLA
	call [LINEH]


	;display the multiline string of options
	push FONT02
	push 0           ;x
	push 25          ;y
	push [ebp+16] d  ;string
	push 0xefff
	call [PUTSML]


	;display a > just left of the edit control
	mov edi,FONT01
	mov ebx,0
	mov eax,[ebp+8]
	sub eax,15    ;yloc 15 pixels up from bottom
	mov ecx,62    ;ascii 62 is >
	mov edx,0xeff6
	call [PUTC]


	;display the edit box at top left
	mov ebx,15              ;xloc
	mov ecx,4               ;maxnumchars 2b entered
	mov edi,pickoptionstor  ;address to store entry
	mov edx,0xf5f6ef        ;colors ccbbtt
	call [GETS]
	jnz .escape

	;we got here after user hit ENTER

	;convert user entry string to number in eax
	mov eax,pickoptionstor
	call [STR2EAX]
	jmp .done


.escape:
	mov eax,0
.done:
	stdcall pickstr1,0,[DUMPEAX]
	pop ebp
	retn 16




  